/ Shows customers (their full names, customer id, and country) who are not in the US. /
SELECT firstname, lastname, customerid, country
FROM customers
WHERE country != 'USA';


/Show only the customers from Brazil. /
SELECT *
FROM customers
WHERE country = 'Brazil';


/ Find the invoices of customers who are from Brazil. /
SELECT customers.firstname, customers.lastname, invoices.invoiceid, invoices.invoicedate, invoices.billingcountry
FROM customers
JOIN invoices ON customers.customerid = invoices.customerid
WHERE customers.country = 'Brazil';


/ Show the employees who are Sales Agents. /
SELECT *
FROM employees
WHERE title = 'Sales Support Agent';


/ Find a unique/distinct list of billing countries form the invoice table. /
SELECT DISTINCT billingcountry
FROM invoices;


/ Provied a query that shows the invoices associated with each sales agent. /
SELECT employees.firstname, employees.lastname, invoices.invoiceid
FROM employees
JOIN customers ON customers.supportrepid = employees.EmployeeId
JOIN invoices ON invoices.CustomerId = customers.CustomerId;


/ Show the invoice total, customer name, country, and sales agent name for all invoices and customers. /
SELECT employees.lastname, employees.firstname, customers.firstname, customers.lastname, customers.Country, invoices.Total
FROM employees
JOIN customers ON customers.supportrepid = employees.EmployeeId
JOIN invoices ON invoices.CustomerId = customers.CustomerId;


/ How many invoices were there in 2009? /
SELECT COUNT(*)
FROM invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';


/ What are teh total sales for 2009? /
SELECT SUM(total)
FROM invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';


/ Write a query that includes the purchased track name with each invoice line item. /
SELECT tracks.Name, invoice_items.InvoiceId
FROM tracks
JOIN invoice_items ON tracks.trackid = invoice_items.TrackId;


/ Write a query that includes the pruchased track name and artist name with each invoice line item. /
SELECT tracks.Name, artists.name, invoice_items.InvoiceId
FROM tracks
JOIN invoice_items ON tracks.TrackId = invoice_items.TrackId
JOIN albums ON tracks.AlbumId = albums.AlbumId
JOIN artists ON albums.artistid = artists.ArtistId;


/ Provide a query that shows all the tracks, and include the album name, media type, and genre. /
SELECT tracks.name, albums.title, media_types.Name, genres.Name
FROM tracks
JOIN albums ON tracks.AlbumId = albums.AlbumId
JOIN media_types ON tracks.MediaTypeId = media_types.MediaTypeId
JOIN genres ON tracks.GenreId = genres.GenreId;


/ Show the total sales made by each sales agent. /
SELECT emp.firstname, emp.lastname, ROUND(SUM(invoices.Total), 2) AS total_sales
FROM employees emp
JOIN customers cust ON emp.employeeid = cust.supportrepid
JOIN invoices ON cust.customerid = invoices.CustomerId
WHERE emp.title = 'Sales Support Agent'
GROUP BY emp.firstname;


/ Which sales agent made the most in sales in 2009? /
SELECT emp.firstname, emp.lastname, ROUND(SUM(invoices.Total), 2) AS total_sales
FROM employees emp
JOIN customers cust ON emp.employeeid = cust.supportrepid
JOIN invoices ON cust.customerid = invoices.CustomerId
WHERE emp.title = 'Sales Support Agent'
AND invoices.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY emp.firstname
ORDER BY total_sales DESC
LIMIT 1;
