# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.


CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
);


#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 



/ What is the average danceability by artist? /
Select distinct artist_name, avg(danceability) AS dancing
FROM Spotifydata
GROUP BY artist_name
ORDER BY dancing DESC;


/ Who are teh top 10 artists based on popularity? /
Select distinct artist_name, popularity
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;


/ What artist released the longest song? /
Select artist_name, duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;


/ Find artist with an average popularity above 90 and label them as top star. /
WITH popularity_avg_CTE AS
(SELECT s.artist_name, avg(s.popularity) AS avg_popularity
FROM Spotifydata s
GROUP BY s.artist_name)

SELECT artist_name, avg_popularity, 'TOP STAR' AS tag
FROM popularity_avg_CTE
WHERE avg_popularity >= 90;